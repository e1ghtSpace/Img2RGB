import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Owner
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtn_Img2RGB = new javax.swing.JButton();
        jTxt_OutputLocation = new javax.swing.JTextField();
        jBtn_OutputBrowse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jBtn_Img2RGB.setText("Select Image and Convert");
        jBtn_Img2RGB.setToolTipText("");
        jBtn_Img2RGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_Img2RGBActionPerformed(evt);
            }
        });

        jTxt_OutputLocation.setText("Output Image folder");
        jTxt_OutputLocation.setToolTipText("");

        jBtn_OutputBrowse.setText("Browse");
        jBtn_OutputBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_OutputBrowseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtn_Img2RGB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTxt_OutputLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtn_OutputBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTxt_OutputLocation, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jBtn_OutputBrowse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtn_Img2RGB)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtn_Img2RGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_Img2RGBActionPerformed
        try
        {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            int returnValue = fileChooser.showOpenDialog(null);
            if(returnValue == JFileChooser.APPROVE_OPTION) {
                String ImgLocation = fileChooser.getSelectedFile().getAbsolutePath();
                try {
                    BufferedImage imgOrig = null;
                    BufferedImage imgNew = null;
                    try {
                    imgOrig = ImageIO.read(new File(ImgLocation));
                    imgNew = ImageIO.read(new File(ImgLocation));
                    }
                    catch (IOException e) {
                    }
                    for(int y=0; y<imgOrig.getHeight(); y++) {
                        for(int x=0; x<imgOrig.getWidth(); x++){
                            
                            // Initialise variables just in case
                            int colorXpos = 1;
                            int colorYpos = 1;
                            
                            if (x % 3 == 0) {
                                colorXpos = x + 1;
                            }
                            if (x % 3 == 1) {
                                colorXpos = x;
                            }
                            if (x % 3 == 2) {
                                colorXpos = x - 1;
                            }
                            
                            while (colorXpos >= imgOrig.getWidth()){
                                colorXpos = colorXpos - 1;
                            }
                            
                            if (y % 3 == 0) {
                                colorYpos = y + 1;
                            }
                            if (y % 3 == 1) {
                                colorYpos = y;
                            }
                            if (y % 3 == 2) {
                                colorYpos = y - 1;
                            }
                            
                            while (colorYpos >= imgOrig.getHeight()){
                                colorYpos-=1;
                            }
                            
                            int color = imgOrig.getRGB(colorXpos, colorYpos);
                            
                            // put colour value into red, green and blue (in the range of 0 to 255)
                            int blue = color & 0xff;
                            int green = (color & 0xff00) >> 8;
                            int red = (color & 0xff0000) >> 16;
                            
                            if (x % 3 == 0) {
                                int pxlColor = new Color(red, 0, 0).getRGB();
                                imgNew.setRGB(x, y, pxlColor);
                            } else if (x % 3 == 1) {
                                int pxlColor = new Color(0, green, 0).getRGB();
                                imgNew.setRGB(x, y, pxlColor);
                            } else if (x % 3 == 2) {
                                int pxlColor = new Color(0, 0, blue).getRGB();
                                imgNew.setRGB(x, y, pxlColor);
                            }
                        }
                    }
                    File outputfile = new File(jTxt_OutputLocation.getText());
                    ImageIO.write(imgNew, "png", outputfile);
                } catch (IOException e) {
                
                }
            }
        }
        catch(HeadlessException ex)
        {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jBtn_Img2RGBActionPerformed

    private void jBtn_OutputBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_OutputBrowseActionPerformed
        // TODO add your handling code here:
        try
        {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int returnValue = fileChooser.showOpenDialog(null);
            if(returnValue == JFileChooser.APPROVE_OPTION) {
                jTxt_OutputLocation.setText(fileChooser.getSelectedFile().getAbsolutePath() + "\\convertedIMG.png");
            }
        }
        catch(HeadlessException ex)
        {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jBtn_OutputBrowseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new UI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtn_Img2RGB;
    private javax.swing.JButton jBtn_OutputBrowse;
    private javax.swing.JTextField jTxt_OutputLocation;
    // End of variables declaration//GEN-END:variables
}